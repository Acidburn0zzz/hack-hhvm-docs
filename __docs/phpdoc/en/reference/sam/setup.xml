<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 325214 $ -->

<chapter xml:id="sam.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.setup;

 <!-- {{{ Requirements -->
 <section xml:id="sam.requirements">
  &reftitle.required;
  <para>
   The SAM extension interfaces to the IBM Messaging and Queuing
   middleware products using a set of libraries and some client side code
   referred to as XMS. This package is available as a free download in
   the guise of IBM support pack IA94. There is a description of this
   package and download links in the article <link xlink:href="&url.ibm.ia94;">
   Introducing XMS - The IBM Message Service API</link>.
  </para>
  <para>
   If you intend to use SAM to access the Messaging and Queuing
   infrastructure within WebSphere MQ then you will also need to have
   installed a local MQ queue manager or installed the WebSphere MQ
   clients package. The clients package is freely available as a support
   pack (<link xlink:href="&url.ibm.mqc6;">MQC6</link>).
  </para>
  <para>
   If you are only aiming to experiment with sending messages to and from
   WebSphere Application Server queues using the <literal>WebSphere Platform
   Messaging protocol (WPM)</literal> then you do not need to install the MQC6
   package.
  </para>
  <para>
   After installing these packages you will need to ensure the XMS binary
   and, if you are using it, the MQ client bin directory are included in
   the PATH environment variable so that Apache and PHP can find the
   dependent .DLLs/libraries.
  </para>
 </section>
 <!-- }}} -->

 <!-- {{{ Installation -->
 <section xml:id="sam.installation">
  &reftitle.install;
  &no.extension;
 </section>
 <!-- }}} -->

 <!-- {{{ Configuration -->
 <section xml:id="sam.configuration">
  &reftitle.runtime;
  <section xml:id="sam.configuration.mapping">
   <title>Protocol support and mapping</title>
   <para>
    The SAM framework can be extended to support other messaging protocols and connection mechanisms. To add
    support for a new protocol or connection library a support class has to be defined, either as a C extension
    or as a PHP script, and a "factory" script must be created. The support class must implement all the
    methods of the SAMConnection class though it should not inherit from SAMConnection. The factory script
    will be called by the SAM framework to create an instance of the implemented class. The way SAM chooses
    which factory to call is based on the protocol specified as the first parameter of the "connect" call.
   </para>
   <para>
    By default the built-in MQTT support will be used if a connect call specifies a protocol of SAM_MQTT ("mqtt"), for
    any other protocol SAM will attempt to use the XMS support extension. To add support for additional
    protocols or to modify the default behavior entries may be added to &php.ini; in the [sam] section. The
    default mapping is equivalent to the following entries:
    <screen>
<![CDATA[
[sam]
sam.factory.mqtt=mqtt
sam.factory.wmq=xms
sam.factory.wmq:client=xms
sam.factory.wmq:bindings=xms
sam.factory.wpm=xms
sam.factory.rtt=xms
]]>
    </screen>
    As can be seen from these examples the entries take the form of "sam.factory.pppp=xxx" where pppp is the protocol
    string specified on the connect call and xxx is a factory suffix.  Note: SAM defines constants for these protocol
    strings such that <literal>SAM_WMQ=wmq</literal>,
    <literal>SAM_WPM=wpm</literal>, <literal>SAM_RTT=rtt</literal>,
    <literal>SAM_MQTT=mqtt</literal>, etc.
   </para>
   <para>
    When identifying the support code to use on a connect call SAM looks up the protocol name in the &php.ini; entries
    and then invokes a factory script named <filename>sam_factory_xxx.php</filename>.  If no entry is found the support will default to XMS.
   </para>
  </section>
 </section>
 <!-- }}} -->

 <!-- {{{ Resources -->
 <section xml:id="sam.resources">
  &reftitle.resources;
  &no.resource;
 </section>
 <!-- }}} -->

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

