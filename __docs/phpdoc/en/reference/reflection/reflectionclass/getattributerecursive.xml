<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 321947 $ -->

<refentry xml:id="reflectionclass.getattributerecursive" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionClass::getAttributeRecursive</refname>
  <refpurpose>Gets <link linkend="hack.attributes">attribute</link> from a class and its parents</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array&lt;int, mixed&gt;</type><methodname>ReflectionClass::getAttributeRecursive</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
  </methodsynopsis>
  <para>
   Returns all attributes with given key from a class and its parents.
  </para>
  &hack.only;

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Name of the key.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns all <link linkend="hack.attributes">attributes</link> from a class and its parents for given key.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><methodname>ReflectionClass::getAttributeRecursive</methodname> example</title>
    <programlisting role="php">
<![CDATA[
<?hh
<<ParentAttr(1, 'Attribute')>>
class ParentClass {
}

class SampleClass extends ParentClass {
}

$class = new ReflectionClass('SampleClass');
var_dump($class->getAttributeRecursive('ParentAttr'));
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  [0]=>
  int(1)
  [1]=>
  string(9) "Attribute"
}
]]>
    </screen>
   </example>
   <example>
    <title><methodname>ReflectionClass::getAttributeRecursive</methodname> example</title>
    <note>
      <simpara>
        If a child class has the same attribute that a parent has, it gets overwritten.
      </simpara>
    </note>
    <programlisting role="php">
<![CDATA[
<?hh
<<Example(2), ParentAttr(1, 'Attribute')>>
class ParentClass {
}

<<Example(1, 'Attribute')>>
class SampleClass extends ParentClass {
}

$class = new ReflectionClass('SampleClass');
var_dump($class->getAttributeRecursive('Example'));
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  [0]=>
  int(1)
  [1]=>
  string(9) "Attribute"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ReflectionClass::getAttributes</methodname></member>
    <member><methodname>ReflectionClass::getAttribute</methodname></member>
    <member><methodname>ReflectionClass::getAttributesRecursive</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
