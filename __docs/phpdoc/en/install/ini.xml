<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 331904 $ -->
<chapter xml:id="configuration" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Runtime Configuration</title>

 <sect1 xml:id="configuration.file">
  <title>The configuration file</title>

  <simpara>
   The configuration file (&php.ini;) is read when HHVM starts up. For the server module versions of HHVM, this happens only once when the web server is started. For the <acronym>CLI</acronym> (Command-Line) versions, it happens on every invocation.
  </simpara>
  <para>
   &php.ini; is searched for in these locations (in order):
   <itemizedlist>
    <listitem>
     <simpara>
      <literal>/etc/hhvm/php.ini</literal>
     </simpara>
   </listitem>
   </itemizedlist>
  </para>
  <note>
    <para>
      Use the <literal>-c</literal> option to HHVM to specify a custom location for the HHVM &php.ini; file.
    </para>
  </note>
  <para>
   Using environment variables can be used in &php.ini; as shown below.
  </para>
  <para>
   <example>
    <title>&php.ini; Environment Variables</title>
     <programlisting role="ini">
<![CDATA[
; PHP_MEMORY_LIMIT is taken from environment
memory_limit = ${PHP_MEMORY_LIMIT}
]]>
     </programlisting>
    </example>
  </para>
  <para>
    The &php.ini; directives handled by extensions are documented on the respective pages of the extensions themselves. A <link linkend="ini">list of the core directives</link> is available in the appendix. Not all HHVM directives are necessarily documented in this manual: for a complete list of directives available in your HHVM version, please read your well commented &php.ini; file.
  </para>
  <para>
   <example>
    <title>&php.ini; example</title>
    <programlisting role="ini">
<![CDATA[
; any text on a line after an unquoted semicolon (;) is ignored
[php] ; section markers (text within square brackets) are also ignored
; Boolean values can be set to either:
;    true, on, yes
; or false, off, no, none
register_globals = off
track_errors = yes

; you can enclose strings in double-quotes
include_path = ".:/usr/local/lib/hhvm"

; backslashes are treated the same as any other character
include_path = ".;c:\hhvm\lib"
]]>
    </programlisting>
    <!-- TODO: add more details about values and expressions -->
   </example>
  </para>
 </sect1>

 <sect1 xml:id="configuration.changes.modes">
  <title>Where a configuration setting may be set</title>
  <para>
   These modes determine when and where a HHVM directive may or may not
   be set, and each directive within the manual refers to one of these
   modes. For example, some settings may be set within a PHP script
   using <function>ini_set</function>, whereas others may require
   &php.ini;.
  </para>
  <para>
   For example, the <link linkend="ini.output-buffering">output_buffering</link> setting is <literal>PHP_INI_PERDIR</literal> therefore it may not be set using <function>ini_set</function>. However, the <link linkend="ini.display-errors">display_errors</link> directive is <literal>PHP_INI_ALL</literal> therefore it may be set anywhere, including with <function>ini_set</function>.
  </para>
  <para>
   <table>
    <title>Definition of PHP_INI_* modes</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Mode</entry>
       <entry>Meaning</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>PHP_INI_USER</literal></entry>
       <entry>
        Entry can be set in user scripts (like with <function>ini_set</function>).
       </entry>
      </row>
      <row>
       <entry><literal>PHP_INI_PERDIR</literal></entry>
       <entry>
        Entry can be set in &php.ini;, &htaccess;, &httpd.conf; or &user-ini;
        (since PHP 5.3)
       </entry>
      </row>
      <row>
       <entry><literal>PHP_INI_SYSTEM</literal></entry>
       <entry>Entry can be set in &php.ini;</entry>
      </row>
      <row>
       <entry><literal>PHP_INI_ALL</literal></entry>
       <entry>Entry can be set anywhere</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </sect1>

 <sect1 xml:id="configuration.changes">
  <title>How to change configuration settings</title>
  <sect2 xml:id="configuration.changes.other">
   <title>Other interfaces to HHVM</title>
   <para>
    Regardless of how you run HHVM, you can change certain values at runtime of your scripts through <function>ini_set</function>. See the documentation on the <function>ini_set</function> page for more information.
   </para>
   <para>
    If you are interested in a complete list of configuration settings on your system with their current values, you can execute the <function>phpinfo</function> function, and review the resulting page. You can also access the values of individual configuration directives at runtime using <function>ini_get</function> or <function>get_cfg_var</function>.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="configuration.zend.compat">
  <title>Zend Extension Source Compatibility Layer</title>
  <para>
   HHVM can use existing zend extensions without writing it from scratch.
   To use these extensions you have to enable the compatiblity layer in
   your <literal>php.ini</literal>.
   <programlisting role="ini">
    hhvm.enable_zend_compat = true
   </programlisting>
  </para>
  <para>
   You can find a list with extensions that are available in zend compat 
   <link xlink:href="https://github.com/facebook/hhvm/tree/master/hphp/runtime/ext_zend_compat">here</link>. For every PECL extensions available, a folder with
   the original name exists.
  </para>
 </sect1>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
