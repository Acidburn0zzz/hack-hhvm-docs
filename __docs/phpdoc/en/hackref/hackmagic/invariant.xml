<?xml version="1.0" encoding="utf-8"?>

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.hack.invariant">
 <refnamediv>
  <refname>invariant</refname>
  <refpurpose>Enforces a given condition is true</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>invariant&lt;T&gt;</methodname>
   <methodparam><type>T</type><parameter>cond</parameter></methodparam>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>invariant</function> tests whether <parameter>cond</parameter> is true. If it is not, it calls <function>invariant_violation</function>, otherwise it does nothing.
  </para>
  <para>
   The Hack type checker is aware of many common expressions for <parameter>cond</parameter> and will modify its knowledge of local variable types after a call to <function>invariant</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>cond</parameter></term>
     <listitem>
      <para>
       Condition to test for truth.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       <function>sprintf</function>-style format string to pass to <function>invariant_violation</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Void.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>invariant</function> used to remove null</title>
    <programlisting role="php" location="function.hack.invariant1.php" />
   </example>
  </para>
  <para>
   <example>
    <title><function>invariant</function> used to assert a specific class</title>
    <programlisting role="php" location="function.hack.invariant2.php" />
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>invariant_violation</function></member>
    <member><function>invariant_callback_register</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
